Print odd numbers in an array

Anonymous Function

let arr=[0,1,2,3,4,5,6,7,8,9];

let odd = function () 
{
  let odd= arr.filter(num => num %2 ==1)
  console.log(odd)
}
odd()

Output

(5) [1,3,5,7,9]


IIFE Function

let a=[0,1,2,3,4,5,6,7,8,9];

(function ()  
{

  let odd= a.filter(num => num %2 ==1);
return odd;

  })();

Output

(5) [1,3,5,7,9]

Arrow Function 

oddNumbers= (array) => 
{
                   for(var i = 0 ; i< array.length ; i++)
{
                        if(array[i]%2!=0){
                           console.log(array[i])
                        } 
                   }
                        }

Output

(5) [1,3,5,7,9]

Convert all the strings to title caps in a string array

Anonymous Function
 
let str = function () 
{
  let arr = "hai are you there"
  let titlecase = arr.toLowerCase().replace(/\b(\w)/g, s => s.toUpperCase());
  console.log(titlecase)
}
str()

OUTPUT 

Hai Are You There

IIFE  

function (str)
{
str = str.toLowerCase().split(' ');
for (var i = 0; i < str.length; i++)
{
  str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);
}
console.log(str.join(' '));
}("hai are you there")

OUTPUT

Hai Are You There

 Arrow Function 
titleCase = (str) => 
{
                    str = str.toLowerCase().split(' ');
                    for (var i = 0; i < str.length; i++) 
{
                      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); 
                    } 
                    return str.join(' ');
                  } ("hai are you there")

OUTPUT

Hai Are You There


Sum of all numbers in an array
Anonymous Function

let func = function ()
{
    
  let ar = [1, 2, 3, 4, 5]
  let sum = ar.reduce(function(a, b)
{
      return a + b;
  });
  console.log(sum);
}
func()


OUTPUT
15


IIFE 

function () 
{
  let sum = [1, 2, 3, 4].reduce(add, 5);
  function add(accumulator, a) 
{
    return accumulator + a;
  }
  console.log(sum);
})()

OUTPUT
15

Arrow
sum = (array)=>
{
             var sum = 0;
                  for(var i = 0 ; i< array.length ; i++){
                     sum = sum + array[i];
                   }
                   return sum;
                   }

OUTPUT
15

Return all the prime numbers in an array

Anonymous Function
let prime = function (arr)
{
  return arr.filter(function(n)
{
    for (let i = 2; i < n; i++) {
      if (n % i === 0) return false;
    }
    return n > 1;
  });
};
console.log(prime([7, 16, 9, 3]));

OUTPUT  (2) [7,3]

IIFE

function ()
{
var primeNum = [7, 16, 9, 3]

primeNum = primeNum.filter(function(number)
{
  for (var i = 2; i <= Math.sqrt(number); i++)
{
    if (number % i === 0) return false;
  }
  return true;
});

console.log(primeNum);
})()

OUTPUT (2) [7,3]

Arrow

primeNumber = (numArray) => 
{
                      numArray = numArray.filter((number) =>
{
                        for (var i = 2; i <= Math.sqrt(number); i++)
{
                          if (number % i === 0) return false;
                        }
                        return true;
                      });
                      console.log(numArray);
                  }

OUTPUT 

(2) [7,3]


Return all the palindromes in an array

Anonymous Function

let isPalindrome = function ()
{
  var myArray = ['benz', 'car', 'honda', 'bike'];
  var arr = myArray.filter(function (c, d)
{
    var palindrome = c.split('').reverse().join('');
    if (c == palindrome) 
{
      console.log(myArray[d]);
    }
  });
}
isPalindrome()

OUTPUT car bike

IIFE 

function () 
{
  var myArray = ['benz', 'car', 'honda', 'bike'];
  var arr = myArray.filter(function (c, d)
{
    var palindrome = c.split('').reverse().join('');
    if (c == palindrome)
{
      console.log(myArray[d]);
    }
  });
})()

OUTPUT: car bike

Arrow

Palindrome = (arr, n) =>
    {
       
        for (let i = 0; i < n; i++)
        {
            let ans = isPalindrome(arr[i]);
            if (ans == false)
                return false;
        }
        return true;
    }

OUTPUT: car bike


Return median of two sorted arrays of same size.

Anonymous Functions
let median = function(a, b) 
{
  let c = [...a, ...b].sort((a, b) => a - b);

  const half = c.length / 2 | 0;
  
if (c.length % 2)
{
  return c[half];
} else {
  
  return (c[half] + c[half - 1]) / 2;
}
}
let arr1 = [1, 12, 15, 26, 38,24];
let arr2 = [2, 13, 17, 30, 45, 47];
console.log(median(arr1, arr2));

OUTPUT 20.5


IIFE 
function() 

{
let arr1 = [1, 12, 15, 26, 38,24];
let arr2 = [2, 13, 17, 30, 45, 47];

let c = [...arr1, ...arr2].sort((arr1, arr2) => arr1 - arr2);

  const half = c.length / 2 | 0;
  
if (c.length % 2) 
{
console.log(c[half]);
} else

{
  
console.log((c[half] + c[half - 1]) / 2);
}

})()

OUTPUT 20.5





 Remove duplicates from an array

Anonymous Functions

let findDuplicates = function ()
{
  const yourArray = [1, 2, 2, 3, 4, 4, 5]
  let duplicates = []
  const tempArray = [...yourArray].sort() 
  for (let i = 0; i < tempArray.length; i++)
{
    if (tempArray[i + 1] === tempArray[i])
{
      duplicates.push(tempArray[i])
    }
  }
  console.log(duplicates) 
}
findDuplicates()


OUTPUT (2) [2, 4]



IIFE 


function () 
{
  
  let numbers = [1, 2, 3, 4, 4, 5, 6, 6];
  
  let duplicates = numbers.filter((item, index) => index !== numbers.indexOf(item));
  
  console.log(duplicates);
})()

OUTPUT: (2) [4, 6]


Rotate an array by k times

Anonymous Functions


let rotateArray =function(A, K) 
{
  if (A.length === K || K === 0) 
{
      return A;
  }
  K = K % A.length;
  for (let i = 0; i < K; i++)
{
      A.unshift(A.pop());
  }
console.log(A)
}
rotateArray([1,2,3,4,5],2)


OUTPUT  (5) [4, 5, 1, 2, 3]


IIFE 

function(A, K)
{
  if (A.length === K || K === 0)
{
      return A;
  }
  K = K % A.length;
  for (let i = 0; i < K; i++) 
{
      A.unshift(A.pop());
  }
console.log(A)
})([1,2,3,4,5],2)

OUTPUT  (5) [4, 5, 1, 2, 3]




